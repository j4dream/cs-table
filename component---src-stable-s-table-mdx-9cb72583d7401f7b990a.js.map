{"version":3,"sources":["webpack:///../src/stable/STable.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","of","Sheet","parentName","__position","__code","__scope","Playground","Props","AutoSizeSTable","sampleData","clonedeep","rowHeader","colHeader","data","className","cellWidth","cellHeight","enableColResize","enableColSorting","enableRowSorting","renderCell","record","rowProp","colProp","indexOf","style","width","height","isMDXComponent"],"mappings":"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","file":"component---src-stable-s-table-mdx-9cb72583d7401f7b990a.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/dream/Documents/my_files/frontend/git-source/dc-table/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport Sheet from './index';\nimport AutoSizeSTable from './AutoSizeSTable';\nimport sampleData from './demo/data';\nimport clonedeep from 'lodash.clonedeep';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"聚合统计表格-statistical-table\"\n    }}>{`聚合统计表格 Statistical Table`}</h1>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Sheet} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"何时使用\"\n    }}>{`何时使用`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`数据聚合；`}</li>\n      <li parentName=\"ul\">{`多级表头，支持行列分组；`}</li>\n      <li parentName=\"ul\">{`数据量大，某些场景不适合分页展示。`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"基本用法\"\n    }}>{`基本用法`}</h2>\n    <Playground __position={1} __code={'() => {\\n  const { rowHeader, colHeader, data } = clonedeep(sampleData)\\n  return (\\n    <>\\n      <h3 className=\\\"text-center\\\">XX 公司季度销售量统计表</h3>\\n      <Sheet rowHeader={rowHeader} colHeader={colHeader} data={data} />\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Sheet,\n      AutoSizeSTable,\n      sampleData,\n      clonedeep,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const {\n          rowHeader,\n          colHeader,\n          data\n        } = clonedeep(sampleData);\n        return <>\n          <h3 className=\"text-center\">XX 公司季度销售量统计表</h3>\n          <Sheet rowHeader={rowHeader} colHeader={colHeader} data={data} mdxType=\"Sheet\" />\n        </>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"自定义表格宽度高度\"\n    }}>{`自定义表格宽度高度`}</h2>\n    <Playground __position={2} __code={'() => {\\n  const { rowHeader, colHeader, data } = clonedeep(sampleData)\\n  return (\\n    <>\\n      <h3 className=\\\"text-center\\\">XX 公司季度销售量统计表</h3>\\n      <Sheet\\n        rowHeader={rowHeader}\\n        colHeader={colHeader}\\n        data={data}\\n        cellWidth={150}\\n        cellHeight={60}\\n      />\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Sheet,\n      AutoSizeSTable,\n      sampleData,\n      clonedeep,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const {\n          rowHeader,\n          colHeader,\n          data\n        } = clonedeep(sampleData);\n        return <>\n          <h3 className=\"text-center\">XX 公司季度销售量统计表</h3>\n          <Sheet rowHeader={rowHeader} colHeader={colHeader} data={data} cellWidth={150} cellHeight={60} mdxType=\"Sheet\" />\n        </>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"可伸缩列\"\n    }}>{`可伸缩列`}</h2>\n    <p>{`\b拖动列伸缩的时候，会延迟渲染，对于视窗内 DOM 元素比较多的时候，拖动不会造成卡顿。  `}</p>\n    <Playground __position={3} __code={'() => {\\n  const { rowHeader, colHeader, data } = clonedeep(sampleData)\\n  return (\\n    <>\\n      <h3 className=\\\"text-center\\\">XX 公司季度销售量统计表</h3>\\n      <Sheet\\n        enableColResize\\n        rowHeader={rowHeader}\\n        colHeader={colHeader}\\n        data={data}\\n      />\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Sheet,\n      AutoSizeSTable,\n      sampleData,\n      clonedeep,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const {\n          rowHeader,\n          colHeader,\n          data\n        } = clonedeep(sampleData);\n        return <>\n          <h3 className=\"text-center\">XX 公司季度销售量统计表</h3>\n          <Sheet enableColResize rowHeader={rowHeader} colHeader={colHeader} data={data} mdxType=\"Sheet\" />\n        </>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"拖拽表头排序\"\n    }}>{`拖拽表头排序`}</h2>\n    <p>{`支持拖拽排序表头，部分重要数据需要排序到前面，可直接拖动表头排序，同时支持行列排序。`}<br parentName=\"p\"></br>{`\n`}{`注意：你只能排序相同子节点。`}</p>\n    <Playground __position={4} __code={'() => {\\n  const { rowHeader, colHeader, data } = clonedeep(sampleData)\\n  return (\\n    <>\\n      <h3 className=\\\"text-center\\\">XX 公司季度销售量统计表</h3>\\n      <Sheet\\n        enableColSorting\\n        enableRowSorting\\n        rowHeader={rowHeader}\\n        colHeader={colHeader}\\n        data={data}\\n      />\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Sheet,\n      AutoSizeSTable,\n      sampleData,\n      clonedeep,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const {\n          rowHeader,\n          colHeader,\n          data\n        } = clonedeep(sampleData);\n        return <>\n          <h3 className=\"text-center\">XX 公司季度销售量统计表</h3>\n          <Sheet enableColSorting enableRowSorting rowHeader={rowHeader} colHeader={colHeader} data={data} mdxType=\"Sheet\" />\n        </>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"自定义渲染表格\"\n    }}>{`自定义渲染表格`}</h2>\n    <p>{`通过指定 renderCell 方法可以渲染表格，你可以渲染成一个可编辑状态的表格，或者自定义组件。`}</p>\n    <Playground __position={5} __code={'() => {\\n  const { rowHeader, colHeader, data } = clonedeep(sampleData)\\n  return (\\n    <>\\n      <h3 className=\\\"text-center\\\">XX 公司季度销售量统计表</h3>\\n      <Sheet\\n        renderCell={(record, rowProp, colProp, data) => {\\n          if (!record) return \\'---\\'\\n          if (rowProp.indexOf(\\'gd-\\') !== -1) return <span>{record} ❤️</span>\\n          return record\\n        }}\\n        rowHeader={rowHeader}\\n        colHeader={colHeader}\\n        data={data}\\n      />\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Sheet,\n      AutoSizeSTable,\n      sampleData,\n      clonedeep,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const {\n          rowHeader,\n          colHeader,\n          data\n        } = clonedeep(sampleData);\n        return <>\n          <h3 className=\"text-center\">XX 公司季度销售量统计表</h3>\n          <Sheet renderCell={(record, rowProp, colProp, data) => {\n            if (!record) return '---';\n            if (rowProp.indexOf('gd-') !== -1) return <span>{record} ❤️</span>;\n            return record;\n          }} rowHeader={rowHeader} colHeader={colHeader} data={data} mdxType=\"Sheet\" />\n        </>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"自适应父元素宽高\"\n    }}>{`自适应父元素宽高`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import { AutoSizeSTable } from 'virtualized-sc-table'\n`}</code></pre>\n    <Playground __position={6} __code={'() => {\\n  const { rowHeader, colHeader, data } = clonedeep(sampleData)\\n  return (\\n    <>\\n      <h3 className=\\\"text-center\\\">XX 公司季度销售量统计表</h3>\\n      <div style={{ width: 800, height: 400 }}>\\n        <AutoSizeSTable\\n          rowHeader={rowHeader}\\n          colHeader={colHeader}\\n          data={data}\\n          cellHeight={22}\\n          cellWidth={80}\\n        />\\n      </div>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Sheet,\n      AutoSizeSTable,\n      sampleData,\n      clonedeep,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const {\n          rowHeader,\n          colHeader,\n          data\n        } = clonedeep(sampleData);\n        return <>\n          <h3 className=\"text-center\">XX 公司季度销售量统计表</h3>\n          <div style={{\n            width: 800,\n            height: 400\n          }}>\n            <AutoSizeSTable rowHeader={rowHeader} colHeader={colHeader} data={data} cellHeight={22} cellWidth={80} mdxType=\"AutoSizeSTable\" />\n          </div>\n        </>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}