{"version":3,"sources":["logo.svg","component/util.js","component/Draggable.js","component/Th.js","component/TableColumnHeader.js","component/TableRowHeader.js","component/TableBody.js","component/node.js","component/tree.js","component/Table.js","component/index.js","data.js","table/DataArea.js","table/util.js","table/Header.js","table/FixedLeftColumn.js","table/FixedLeftHeader.js","table/CSTable.js","table/demo/demo1.js","table/useUpdateEffect.js","table/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","getScrollBarWidth","dom","document","createElement","body","style","visibility","width","position","top","overflow","appendChild","totalWidth","offsetWidth","widthWithoutScroll","clientWidth","removeChild","convertToColumnHeader","columns","maxLevel","traverse","column","parent","level","children","length","colSpan","forEach","subColumn","rows","i","push","allColumns","queue","slice","rowSpan","convertToRowHeader","rowsLength","child","posCount","offset","start","ascId","getAscId","matchesFun","isMatchSelector","el","selector","f","Draggable","props","state","mouseDown","dragging","onMouseDown","bind","onMouseMove","onMouseUp","e","button","domNode","findDOMNode","this","handle","rootDom","node","parentNode","matchsSlelector","target","addEvent","pageOffset","getBoundingClientRect","height","left","setState","originX","pageX","originY","pageY","elementX","elementY","deltaX","deltaY","distance","Math","abs","onDragStart","dragData","prestate","pos","computedLeft","scrollLeft","computedTop","scrollTop","axis","removeEvent","onDragStop","onselectstart","ondragstart","addEventListener","removeEventListener","callback","opacity","zIndex","className","React","Component","defaultProps","Th","handleMouseDown","type","draggingColumn","table","context","tableEl","colResizeProxy","rowResizeProxy","tableRect","tableLeft","tableTop","thEl","tagName","thRect","minLeft","minTop","startMouseLeft","clientX","startMouseTop","clientY","startLeft","right","direction","startTop","bottom","handleMouseMove","event","deltaLeft","proxyLeft","max","deltaTop","proxyTop","handleMouseUp","targetNode","headerTree","getLastNode","index","getDeepestNodeByIndex","rowHeaderTree","calWidth","realWidth","minWidth","offsetHeight","colHeaderTree","calHeight","cursor","onLayoutChange","scheduleLayout","sortingColumn","rect","bodyStyle","disableResizeCol","disableResizeRow","handleMouseOut","onMouseEnter","sortSameLevelPos","refreshColumn","handleSortStart","handleSortStop","setTimeout","name","fn","args","sortSameLevelColumn","onMouseOut","classnames","leaf","computedHeight","resizeWidth","resizeHeight","contextTypes","PropTypes","any","TableRowHeader","colHeaderWidth","store","columnHeader","border","cellPadding","cellSpacing","borderBottom","map","prop","key","rs","c","gutterWidth","forceHideYGutter","scrollY","tree","rowTableColGroup","rowHeader","rowHeaderWidth","scrollX","deepestNodePath","TableBody","recordsInView","offsetIndex","lazyRenderRows","throttle","showRowHeader","rowGroup","data","isNoData","row","rowIndex","getCellHeight","rowsInView","rowHeaderItem","rowProp","lazyLoading","transform","getLazyData","getMapData","Node","field","minHeight","undefined","Tree","setting","sorting","leafNodes","root","buildTree","_initTree","_findDeepestNodePath","getLeafNodes","savedConfig","Object","assign","currentNode","addChild","item","_traverse","Date","getTime","mockCloneData","cloneDeep","mockData","mockSorted","traverseDF","dataNode","getNodeByProp","sortedNode","soredNodesWidthSeq","end","console","log","source","dest","tempEl","remove","allNodes","getBFSNodes","dn","deepestPath","unshift","n","rootNode","clear","cb","pNode","recurse","nodes","result","tn","l","rep","sortingIndex","indexOf","rIndex","splice","Table","layout","colHeaderHeight","bodyWrapperHeight","handleScroll","bodyWrapper","colHeaderWrapper","rowHeaderWrapper","tableBody","showColumnHeader","lazyStartIndex","r","co","cornerNode","calculateWidth","forceUpdate","calculateHeight","updateScrollY","bodyMinWidth","reduce","acc","col","tableElWidth","flexColumns","filter","bodyWidth","totalFlexWidth","flexWidthPerPixel","pre","widthWithoutFirst","flexWidth","floor","clientHeight","maxHeight","isNumber","querySelector","tableWidth","colConfig","rowConfig","cell","w","h","getDFSNodes","ro","getConfig","safeCallLayoutChange","refreshTable","ref","bindRef","tableHeight","marginLeft","bodyHeightOrMaxHeight","onScroll","ceil","marginTop","showCorner","Boolean","Array","isArray","keys","useMapData","childContextTypes","0","1","2","3","4","5","6","7","useContext","CSTableContext","renderCell","cellWidth","cellHeight","dataAreaState","header","processedHeader","processedData","rowStartIndex","_","colIndex","processHeaderWidth","defaultCellWidth","returnTotalWidth","curr","returnFalse","renderHeader","setDataAreaState","tableRef","colResizeProxyRef","allHeader","isDraggingRef","useRef","draggingCol","startPosRef","colStartIndex","useCallback","current","currHeader","currentTarget","dataset","handleResizeStart","movedDistance","handleResizeStop","currH","find","dataAreaWidth","prev","currTarget","startPos","data-prop","fixedLeftCol","CSTable","scrollBarWidth","dataAreaRef","headerRef","fixedColLeftRef","fixedLeftColWidth","preventScroll","enableResize","areaWidthAfterResize","rowCount","colCount","areaWidth","useMemo","areaHeight","Header","FixedLeftHeader","FixedLeftColumn","DataArea","createContext","getRangeFromArr","arr","count","res","record","Provider","label","scrollBarRef","restHeader","fixed","fixedLeft","preventScrollRef","initWidthCountRef","initHeightCountRef","useState","fnc","deps","isMountRef","useEffect","useUpdateEffect","preState","preData","preHeader","preFixedLeftCol","colCacheIndexRef","rowCacheIndexRef","cellTarget","sLeft","sTop","oHeight","scrollWidth","accWidth","startIndex","endIndex","getMutableIndexAndCount","colRenderCount","rowRenderCount","prevState","editorContext","value","memo","p","href","d","margin","App","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4b0cc16f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export function getColHeaderHeightIndex(node) {\n  return node.level + node.rowSpan - 2\n}\n\nlet scrollBarWidth;\nexport function getScrollBarWidth() {\n  if (scrollBarWidth !== undefined) return scrollBarWidth;\n  const dom = document.createElement('div');\n  const body = document.body || dom;\n\n  dom.style.visibility = 'hidden';\n  dom.style.width = '100px';\n  dom.style.position = 'absolute';\n  dom.style.top = '-9999px';\n  dom.style.overflow = 'scroll';\n\n  body.appendChild(dom);\n\n  const totalWidth = dom.offsetWidth;\n  const widthWithoutScroll = dom.clientWidth;\n\n  body.removeChild(dom);\n\n  return totalWidth - widthWithoutScroll;\n}\n\nexport function convertToColumnHeader(columns = []) {\n  let maxLevel = 1;\n\n  function traverse(column, parent) {\n    if (parent) {\n      column.level = parent.level + 1;\n      if (maxLevel < column.level) {\n        maxLevel = column.level;\n      }\n    } else {\n      column.level = 1;\n    }\n\n    if (column.children.length) {\n      let colSpan = 0;\n      column.children.forEach((subColumn) => {\n        traverse(subColumn, column);\n        colSpan += subColumn.colSpan;\n      });\n      column.colSpan = colSpan;\n    } else {\n      column.colSpan = 1;\n    }\n  }\n\n  columns.forEach((column) => {\n    traverse(column);\n  });\n\n  const rows = [];\n  for (let i = 0; i < maxLevel; i++) {\n    rows.push([]);\n  }\n\n  const allColumns = [];\n  const queue = columns.slice();\n  for (let i = 0; queue[i]; i++) {\n    allColumns.push(queue[i]);\n    if (queue[i].children.length) queue.push(...queue[i].children);\n  }\n\n  allColumns.forEach((column) => {\n    if (!column.children.length) {\n      column.rowSpan = maxLevel - column.level + 1;\n    } else {\n      column.rowSpan = 1;\n    }\n    rows[column.level - 1].push(column);\n  });\n  return rows;\n  \n}\n\nexport function convertToRowHeader(columns = []) {\n  let maxLevel = 1;\n  let rowsLength = 0;\n\n  function traverse(column, parent) {\n    if (parent) {\n      column.level = parent.level + 1;\n      if (maxLevel < column.level) {\n        maxLevel = column.level;\n      }\n    } else {\n      column.level = 1;\n    }\n\n    // 计算 row span 以及计算有几个 叶子\n    if (column.children.length > 0) {\n      let rowSpan = 0;\n      column.children.forEach((child) => {\n        traverse(child, column);\n        rowSpan += child.rowSpan;\n      });\n      column.rowSpan = rowSpan;\n    } else {\n      column.rowSpan = 1;\n      return rowsLength++;\n    }\n  }\n\n  columns.forEach((column) => {\n    traverse(column);\n  });\n\n  let rows = []\n  for(let i = 0; i < rowsLength; i++) {\n    rows.push([]);\n  };\n\n  // 记录位置 index\n  const posCount = {};\n  for(let i = 1; i <= maxLevel; i++) {\n    posCount[i] = 0;\n  }\n\n  const allColumns = [];\n  const queue = columns.slice();\n  for (let i = 0; queue[i]; i++) {\n    allColumns.push(queue[i]);\n    if (queue[i].children) queue.push(...queue[i].children);\n  }\n\n  // 计算 col span, \n  allColumns.forEach((column) => {\n    if (column.children.length === 0) {\n      column.colSpan = maxLevel - column.level + 1;\n    } else {\n      column.colSpan = 1;\n    }\n  });\n\n\n  allColumns.forEach(column => {\n    const { rowSpan, level } = column;\n    // 如果占用了位置 则添加 offset\n    let offset = 0; \n    column.start = posCount[level];\n    if (column.parent && column.parent.start > column.start) {\n      offset += column.parent.start - column.start;\n      column.start += offset;\n    }\n    posCount[level] += offset;\n    rows[posCount[level]].push(column);\n    posCount[level] += rowSpan;\n  });\n  return rows;\n}\n\nexport function getLeafColumns(columns) {\n  const result = [];\n  columns.forEach((column) => {\n    if (column.children) {\n      result.push(...getLeafColumns(column.children));\n    } else {\n      result.push(column);\n    }\n  });\n  return result;\n}\n\nlet ascId = 0;\nexport function getAscId(){\n  return ascId++;\n}\n\nlet matchesFun = '';\nfunction isMatchSelector(el, selector) {\n  if (!matchesFun) {\n    [\n      'matches',\n      'webkitMatchesSelector',\n      'mozMatchesSelector',\n      'msMatchesSelector',\n      'oMatchesSelector',\n    ].forEach(f => {\n      if (typeof el[f] === 'function') {\n        matchesFun = f;\n      }\n    });\n  }\n  return el[matchesFun](selector);\n}\n\nexport function matchsSlelector(el, selector, rootDom) {\n  let node = el;\n  while(node) {\n    if (isMatchSelector(el, selector)) return true;\n    if (node === rootDom) return false;\n    node = node.parentNode;\n  }\n  return false;\n}\n\nexport const isNumber = val => typeof val === 'number';\n","import React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport { matchsSlelector } from './util';\nconst DRAG_THRESHOLD = 2;\n\nexport default class Draggable extends React.Component {\n\n  static defaultProps = {\n    axis: 'none',\n    handle: null,\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      mouseDown: false,\n      dragging: false\n    };\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onMouseMove = this.onMouseMove.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n  }\n\n  onMouseDown(e) {\n    // left button\n    if(e.button === 0) {\n      //e.stopPropagation();\n      const domNode = findDOMNode(this);\n      const { handle } = this.props;\n      if (handle && !matchsSlelector(e.target, handle, domNode)) {\n        return;\n      }\n      this.addEvent();\n      const pageOffset = findDOMNode(this).getBoundingClientRect();\n      const { width, height, left, top } = pageOffset;\n      this.setState({\n        mouseDown: true,\n        originX: e.pageX,\n        originY: e.pageY,\n        elementX: left,\n        elementY: top,\n        width,\n        height\n      });\n    }\n  }\n\n  onMouseMove(e) {\n    const deltaX = e.pageX - this.state.originX;\n    const deltaY = e.pageY - this.state.originY;\n    const distance = Math.abs(deltaX) + Math.abs(deltaY);\n    if (!this.state.dragging && distance > DRAG_THRESHOLD) {\n      if (this.props.onDragStart) {\n        this.props.onDragStart(this.props.dragData);\n      }\n      this.state.dragging = true;\n    }\n    if(this.state.dragging) {\n      this.setState((prestate) => {\n        const pos = {};\n        const computedLeft = prestate.elementX + deltaX + document.body.scrollLeft;\n        const computedTop  = prestate.elementY + deltaY + document.body.scrollTop;\n        if (this.props.axis === 'none') {\n          pos.left = computedLeft;\n          pos.top = computedTop;\n        }\n        if (this.props.axis === 'x') {\n          pos.left = computedLeft;\n          pos.top =prestate.elementY;\n        }\n        if (this.props.axis === 'y') {\n          pos.left = prestate.elementX;\n          pos.top = computedTop;\n        }\n        return pos;\n      });\n    }\n  }\n\n  onMouseUp() {\n    this.removeEvent();\n    const { onDragStop } = this.props;\n    const { dragging } = this.state;\n    if (dragging) {\n      if (onDragStop) {\n        onDragStop();\n      }\n      this.setState({ dragging: false });\n    }\n  }\n\n  addEvent() {\n    document.onselectstart = () => false;\n    document.ondragstart = () => false;\n    document.addEventListener('mousemove', this.onMouseMove);\n    document.addEventListener('mouseup', this.onMouseUp);\n  }\n\n  removeEvent() {\n    document.onselectstart = null;\n    document.ondragstart = null;\n    document.removeEventListener('mousemove', this.onMouseMove);\n    document.removeEventListener('mouseup', this.onMouseUp);\n  }\n\n  componentWillUnmount() {\n    this.setState = (state, callback) => {\n      return\n    }\n  }\n\n  style() {\n    const { dragging, left, top, width, height } = this.state;\n    if (dragging) {\n      return {\n        position: 'fixed',\n        opacity: .6,\n        left,\n        top,\n        width,\n        height,\n        zIndex: 12,\n      }\n    }\n    return {};\n  }\n\n  render() {\n    return (\n      <div\n        style={this.style()}\n        className={this.props.className}\n        onMouseDown={this.onMouseDown}>\n        {this.props.children}\n      </div>\n    );\n  }\n}","import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n// import Draggable, {DraggableCore} from 'react-draggable';\nimport Draggable from './Draggable';\n\nexport default class Th extends React.Component {\n\n  static contextTypes = {\n    table: PropTypes.any,\n  };\n\n  state = {\n    style: {}\n  };\n\n  handleMouseDown = (e) => {\n    const { column, type } = this.props;\n    if (this.draggingColumn) {\n      this.dragging = true;\n      const { table } = this.context;\n      const { tableEl, colResizeProxy, rowResizeProxy } = table;\n      const tableRect = tableEl.getBoundingClientRect();\n      const { left:tableLeft, top:tableTop } = tableRect;\n      let thEl = e.target;\n      while (thEl && thEl.tagName !== 'TH') {\n        thEl = thEl.parentNode;\n      }\n      \n      \n      const thRect = thEl.getBoundingClientRect();\n      const minLeft = thRect.left - tableLeft + 30;\n      const minTop = thRect.top - tableTop + 30;\n\n      const startMouseLeft = e.clientX;\n      const startMouseTop = e.clientY;\n      const startLeft = thRect.right - tableLeft;\n      \n      if (this.direction === 'hori') {\n        colResizeProxy.style.visibility = 'visible';\n        colResizeProxy.style.left = startLeft + 'px';\n      }\n\n      const startTop =  thRect.bottom - tableTop;\n      if (this.direction === 'vert') {\n        rowResizeProxy.style.visibility = 'visible';\n        rowResizeProxy.style.top = startTop + 'px';\n      }\n \n      document.onselectstart = () => false;\n      document.ondragstart = () => false;\n\n      const handleMouseMove = (event) => {\n        const deltaLeft = event.clientX - startMouseLeft;\n        const proxyLeft = startLeft + deltaLeft;\n        colResizeProxy.style.left = Math.max(minLeft, proxyLeft) + 'px';\n\n        const deltaTop = event.clientY - startMouseTop;\n        const proxyTop = startTop + deltaTop;\n        rowResizeProxy.style.top = Math.max(minTop, proxyTop) + 'px';\n      };\n\n      const handleMouseUp = (event) => {\n        if (this.dragging) {\n          if (this.direction === 'hori') {\n            const offsetWidth = event.clientX - startMouseLeft;\n            let targetNode;\n            if (type === 'col') {\n              targetNode = this.headerTree.getLastNode(column);\n            }\n            if (type === 'row') {\n              const { level } = column;\n              const index = level - 1;\n              targetNode = this.headerTree.getDeepestNodeByIndex(index);\n            }\n            if (type === 'corner') {\n              const { rowHeaderTree } = this.context.table;\n              targetNode = rowHeaderTree.getDeepestNodeByIndex();\n            }\n            const calWidth = (targetNode.width || targetNode.realWidth || targetNode.minWidth) + offsetWidth;\n            targetNode.width = calWidth < 80 ? 80 : calWidth;\n            targetNode.realWidth = targetNode.width;\n          }\n\n          if (this.direction === 'vert') {\n            const offsetHeight = event.clientY - startMouseTop;\n            let targetNode;\n            if (type === 'col') {\n              const { level, rowSpan } = column;\n              const index = level + rowSpan - 2;\n              targetNode = this.headerTree.getDeepestNodeByIndex(index);\n            }\n            if (type === 'row') {\n              targetNode = this.headerTree.getLastNode(column);          \n            }\n            if (type === 'corner') {\n              const { colHeaderTree } = this.context.table;\n              targetNode = colHeaderTree.getDeepestNodeByIndex();\n            }\n            const calHeight = targetNode.height + offsetHeight;\n            targetNode.height = calHeight < 30 ? 30 : calHeight;\n          }\n\n          this.dragging = false;\n          this.draggingColumn = null;\n\n          document.body.style.cursor = '';\n          colResizeProxy.style.visibility = 'hidden';\n          rowResizeProxy.style.visibility = 'hidden';\n          document.removeEventListener('mousemove', handleMouseMove);\n          document.removeEventListener('mouseup', handleMouseUp);\n          document.onselectstart = null;\n          document.ondragstart = null;\n\n          this.context.table.onLayoutChange();\n\n          this.context.table.scheduleLayout();\n        }\n      }\n\n      document.addEventListener('mousemove', handleMouseMove);\n      document.addEventListener('mouseup', handleMouseUp);\n    }\n  }\n\n\n  get headerTree() {\n    const { type } = this.props;\n    if (type === 'row') {\n      return this.context.table.rowHeaderTree;\n    }\n    if (type === 'col') {\n      return this.context.table.colHeaderTree;\n    }\n    return {};\n  }\n\n  dispatchEvent(name, ...args) {\n    const fn = this.props[name];\n    fn && fn(...args);\n  }\n\n  get disableResizeCol() {\n    const { resizeWidth } = this.context.table.props;\n    if (!resizeWidth) {\n      return true;\n    }\n    return false;\n  }\n\n  get disableResizeRow() {\n    const { resizeHeight } = this.context.table.props;\n    if (!resizeHeight) {\n      return true;\n    }\n    return false;\n  }\n\n  handleMouseMove = (e) => {\n    const { column } = this.props;\n    if (this.headerTree.sortingColumn) return;\n    if (!this.dragging) {\n      let target = e.target;\n      while (target && target.tagName !== 'TH') {\n        target = target.parentNode;\n      }\n\n      const rect = target.getBoundingClientRect();\n      const bodyStyle = document.body.style;\n\n      if (rect.width > 12 && rect.right - e.pageX < 5) {\n        if (this.disableResizeCol) return;\n        bodyStyle.cursor = 'col-resize';\n        this.draggingColumn = column;\n        this.direction = 'hori';\n      } else if ( rect.height > 12 && rect.bottom - e.clientY < 5) {\n        if (this.disableResizeRow) return;\n        bodyStyle.cursor = 'row-resize';\n        this.direction = 'vert';\n        this.draggingColumn = column;\n      } else {\n        bodyStyle.cursor = '';\n        this.draggingColumn = null;\n        this.direction = null;\n      }\n    }\n  }\n\n  handleMouseOut = () => {\n    document.body.style.cursor = '';\n  }\n\n  onMouseEnter = () => {\n    const { column, type } = this.props;\n    const { colHeaderTree, rowHeaderTree } = this.context.table;\n    if (type === 'col') {\n      if (colHeaderTree.sortingColumn) {\n        if (colHeaderTree.sortSameLevelPos(column)) {\n          this.context.table.refreshColumn();\n        };\n      }\n      colHeaderTree.sortingColumn = null;\n    } else {\n      if (rowHeaderTree.sortingColumn) {\n        if (rowHeaderTree.sortSameLevelPos(column)) {\n          this.context.table.refreshColumn();\n        };\n      }\n      rowHeaderTree.sortingColumn = null;\n    }\n      \n  }\n\n  handleSortStart = () => {\n    const { column, type } = this.props;\n    const { colHeaderTree, rowHeaderTree } = this.context.table; \n    if (type === 'col') {\n      colHeaderTree.sortingColumn = column;\n    } else {\n      rowHeaderTree.sortingColumn = column;\n    }\n  }\n\n  handleSortStop = () => {\n   setTimeout(() => {\n    const { colHeaderTree, rowHeaderTree } = this.context.table; \n    colHeaderTree.sortingColumn = null;\n    rowHeaderTree.sortingColumn = null;\n   }, 200);\n  }\n\n  getEextraProps() {\n\n  }\n\n  render() {\n    const { column, type } = this.props;\n    const { style } = this.state;\n    const { colSpan, rowSpan, name, children } = column;\n    const { sortSameLevelColumn } = this.context.table.props;\n    return (\n      <th\n        colSpan={colSpan}\n        rowSpan={rowSpan}\n        onMouseMove={this.handleMouseMove}\n        onMouseOut={this.handleMouseOut}\n        onMouseDown={this.handleMouseDown}\n        onMouseEnter={this.onMouseEnter}\n        className={classnames({leaf: !children})}\n        height={column.computedHeight()}\n        style={style}\n      >\n        {\n          sortSameLevelColumn\n            ? (\n                <Draggable\n                  handle=\".icon\"\n                  axis={type===\"col\" ? \"x\": \"y\"}\n                  onDragStart={this.handleSortStart}\n                  onDragStop={this.handleSortStop}\n                >\n                  <div className=\"cell exchange\">\n                    <div className={`icon ${type===\"col\" ? \"x\": \"y\"}`}>\n\n                    </div>\n                    {name}\n                  </div>\n                </Draggable>\n              )\n            : (\n              <div className=\"cell\">{name}</div>\n            )\n        }\n      </th>\n    );\n  }\n}","import React from 'react';\nimport { getAscId }  from './util';\nimport Th from './Th';\n\nexport default class TableRowHeader extends React.Component {\n\n  getColWidth(width) {\n    if (width > 100) {\n      return width;\n    }\n    return 100;\n  }\n\n  get gutterWidth() {\n    const { forceHideYGutter, scrollY, gutterWidth } = this.props.store;\n    if (forceHideYGutter || !scrollY) {\n      return 0;\n    }\n    return gutterWidth;\n  }\n\n  render() {\n    const { colHeaderWidth, store } = this.props;\n    const { columnHeader } = store;\n    return (\n      <table border=\"0\" cellPadding=\"0\" cellSpacing=\"0\" style={{borderBottom: 0, width: colHeaderWidth}}>\n        <colgroup>\n          {\n            store.columns.map(({realWidth, prop}) => (\n              <col width={realWidth} style={{ width: realWidth }} key={prop} />\n            ))\n          }\n        </colgroup>\n        <thead>\n          {\n            columnHeader.map( rs => (\n              <tr key={getAscId()}>\n                {\n                  rs.map((c) => (\n                      <Th type=\"col\" column={c} key={c.prop}/>\n                    )\n                  )\n                }\n                <th className=\"gutter-col\" style={{ width: this.gutterWidth}}></th>\n              </tr>\n            ))\n          }\n        </thead>\n      </table>\n    );\n  }\n}","import React from 'react';\nimport { getAscId }  from './util';\nimport Th from './Th';\n\nexport default class TableRowHeader extends React.Component {\n\n  render() {\n    const { store, tree } = this.props;\n    const { rowTableColGroup, rowHeader, rowHeaderWidth } = store;\n    return (\n      <table border=\"0\" cellSpacing=\"0\" style={{width: rowHeaderWidth}}>\n        <colgroup>\n          {\n            rowTableColGroup.map(({realWidth, key}) => (\n              <col width={realWidth} style={{ realWidth }} key={key} />\n            ))\n          }\n        </colgroup>\n        <thead>\n          {\n            rowHeader.map( rs => (\n              <tr key={getAscId()}>\n                {\n                  rs.map(c => <Th type=\"row\" column={c} key={getAscId()}/>)\n                }\n              </tr>\n            ))\n          }\n          {\n            store.scrollX && (\n              <tr>\n                <th className=\"gutter-row\" colSpan={tree.deepestNodePath.length} height=\"17\">\n\n                </th>\n              </tr>\n            )\n          }\n        </thead>\n      </table>\n    );\n  }\n}","import React from 'react';\nimport { getAscId }  from './util';\nimport { throttle } from 'throttle-debounce'; \n\nexport default class TableBody extends React.Component {\n\n  static defaultProps = {\n    rowsInView: 20,\n  }\n\n  state = {\n    recordsInView: [],\n    offsetIndex: 0,\n  };\n\n  constructor(props) {\n    super(props);\n    this.lazyRenderRows = throttle(500, this.lazyRenderRows);\n  }\n\n  getCellHeight(index) {\n    const { showRowHeader, store } = this.props;\n    const { rowGroup } = store;\n    if (showRowHeader && rowGroup && rowGroup.length) {\n      return rowGroup[index].computedHeight() - 1;\n    }\n    return 30;\n  }\n\n  get rows() {\n    const { rowGroup } = this.props.store;\n    return rowGroup.length;\n  }\n\n  getMapData() {\n    const { rowGroup, data, columns } = this.props.store;\n    if (this.props.isNoData) {\n      return <tr></tr>;\n    }\n    return rowGroup.map((row, rowIndex) => (\n      <tr key={getAscId()}>\n        {\n          columns.map(column => {\n            return (\n              <td key={getAscId()}>\n                <div className=\"cell\" style={{height: this.getCellHeight(rowIndex)}}>\n                  {data[row.prop] && data[row.prop][column.prop]}\n                </div>\n              </td>\n            );\n          })\n        }\n      </tr>\n    )\n      \n    );\n  }\n\n  getLazyData() {\n    const { store, isNoData } = this.props;\n    const { recordsInView } = this.state;\n    if (isNoData) {\n      return <tr></tr>;\n    }\n    return recordsInView.map((row, rowIndex) => {\n      return (\n        <tr key={getAscId()}>\n          {\n            store.columns.map(column => {\n              return (\n                <td key={getAscId()}>\n                  <div className=\"cell\" style={{height: this.getCellHeight(rowIndex)}}>\n                    {row && row[column.prop]}\n                  </div>\n                </td>\n              );\n            })\n          }\n        </tr>\n      );\n    });\n  }\n\n  lazyRenderRows(offsetIndex = 0) {\n    const { rowGroup, data } = this.props.store;\n    if (rowGroup.length) {\n      const recordsInView = [];\n      for(let i = 0; i < this.props.rowsInView; i++) {\n        const rowHeaderItem = rowGroup[offsetIndex + i];\n        if (rowHeaderItem) {\n          const rowProp = rowHeaderItem.prop;\n          const row = data[rowProp];\n          recordsInView.push(row);\n        }\n      }\n      this.setState({recordsInView, offsetIndex});\n    }\n  }\n\n  render() {\n    const { colHeaderWidth, store, lazyLoading, isNoData } = this.props;\n    const { offsetIndex } = this.state;\n    return lazyLoading\n            ? <div style={{height: isNoData ? 0 : this.rows * 30}}>\n                <table border=\"0\" cellSpacing=\"0\" style={{width: colHeaderWidth - (store.scrollY ? store.gutterWidth : 0), transform: `translate(0, ${offsetIndex * 30}px)`}} className=\"dc-table-real-body\">\n                  <colgroup>\n                    {\n                      store.columns.map((column, index) => (\n                        <col width={column.realWidth} style={{ width: column.realWidth }} key={column.prop} />\n                      ))\n                    }\n                  </colgroup>\n                  <tbody>\n                    {this.getLazyData()}\n                  </tbody>\n                </table>\n              </div>\n            : <table border=\"0\" cellSpacing=\"0\" style={{width: colHeaderWidth - (store.scrollY ? store.gutterWidth : 0)}} className=\"dc-table-real-body\">\n                <colgroup>\n                  {\n                    store.columns.map((column, index) => (\n                      <col width={column.realWidth} style={{ width: column.realWidth }} key={column.prop} />\n                    ))\n                  }\n                </colgroup>\n                  <tbody>\n                    {this.getMapData()}\n                  </tbody>\n              </table>\n      }\n  \n}","import { getAscId } from \"./util\";\n\nexport default class Node {\n  parent = null;\n  children = [];\n  data = null;\n  key = null;\n  level = null;\n  colSpan = 0;\n  rowSpan = 0;\n  width = null;\n  height = 0;\n  minHeight = 30;\n  minWidth = 80;\n  realWidth = 80;\n  prop = null;\n  field = null;\n  name = '';\n\n  constructor({children, name, prop, field, width, height = 40} = {}) {\n    this.name = name;\n    this.prop = prop || field;\n    this.width = width;\n    this.realWidth = width;\n    this.height = height;\n    this.key = getAscId();\n  }\n\n  addChild(data) {\n    this.children.push(data);\n  }\n\n  computedHeight() {\n    return this.height || this.minHeight;\n  }\n\n  // for stringify\n  clear() {\n    // keep prop, children\n    this.parent = undefined;\n    this.data = undefined;\n    this.key = undefined;\n    this.colSpan = undefined;\n    this.rowSpan = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.minHeight = undefined;\n    this.minWidth = undefined;\n    this.realWidth = undefined;\n    this.field = undefined;\n    this.name = undefined;\n    this.start = undefined;\n  }\n}","import Node from './node';\nimport cloneDeep from 'lodash.clonedeep';\n// import differenceby from 'lodash.differenceby';\nimport remove from 'lodash.remove';\n\nexport default class Tree {\n  children = [];\n  deepestNodePath = [];\n  leafNodes = [];\n  setting = {};\n  sorting = [];\n  root = new Node();\n\n  sortingColumn = null;\n\n  constructor(data = [], setting = {}, sorting = []) {\n    this.setting = setting;\n    this.sorting = sorting;\n    this.buildTree(data);\n  }\n\n  buildTree(data) {\n    this._initTree(data);\n    this.deepestNodePath = this._findDeepestNodePath();\n    this.leafNodes = this.getLeafNodes();\n  }\n\n  _traverse(node, parent) {\n    const { prop, field } = node;\n    const savedConfig = this.setting[prop] || this.setting[field];\n    if (savedConfig) {\n      Object.assign(node, savedConfig);\n    }\n    const currentNode = new Node(node);\n    if (parent) {\n      currentNode.parent = parent;\n      parent.addChild(currentNode);\n    }\n    \n    if (node.children) {\n      node.children.forEach(item => {\n        this._traverse(item, currentNode);\n      })\n    }\n  }\n\n  _initTree(data) {\n    // saved col setting\n    const start = new Date().getTime();\n    if (this.sorting) {\n      const mockCloneData = { children: cloneDeep(data), prop: 'root' };\n      const mockData = { children: data, prop: 'root' };\n      const mockSorted = { children: this.sorting, prop: 'root' };\n      this.traverseDF(node => {\n        const prop = node.prop;\n        const dataNode = this.getNodeByProp(prop, mockData);\n        const sortedNode = this.getNodeByProp(prop, mockSorted);\n        if (sortedNode) {\n          this.soredNodesWidthSeq(dataNode.children, sortedNode.children);\n        }\n        \n      }, mockCloneData);\n    }\n    const end = new Date().getTime();\n    console.log('used time: ', end - start);\n    data.forEach(item => {\n      this._traverse(item, this.root);\n    });\n  }\n\n  // source 原地算法排序\n  soredNodesWidthSeq(source, dest) {\n    dest.forEach((item) => {\n      const tempEl = remove(source, function(i) {\n        return i.prop === item.prop;\n      });\n      if (tempEl.length) {\n        source.push(tempEl[0]);\n      }\n    });\n  }\n  \n  _findDeepestNodePath() {\n    const allNodes = this.getBFSNodes();\n    // deepest node\n    let dn = allNodes[allNodes.length-1];\n    const deepestPath = [];\n    while(dn && dn.parent) {\n      deepestPath.unshift(dn);\n      dn = dn.parent;\n    }\n\n    return deepestPath;\n  }\n\n  // BFS\n  getBFSNodes() {\n    const allNodes = [];\n    const queue = this.root.children.slice();\n\n    for (let i = 0; queue[i]; i++) {\n      allNodes.push(queue[i]);\n      if (queue[i].children) queue.push(...queue[i].children);\n    }\n\n    return allNodes;\n  }\n\n  getNodeByProp(prop, root) {\n    let node = null;\n    this.traverseDF((n)=> {\n      if(n.prop === prop) {\n        node = n;\n        return true;\n      }\n    }, root);\n    return node;\n  }\n\n  getDFSNodes() {\n    const rootNode = cloneDeep(this.root);\n    this.traverseDF((node) => {\n      node.clear();\n    }, rootNode);\n    return rootNode.children;\n  }\n\n  traverseDF(cb, parent) {\n    let pNode = parent || this.root\n    if (!pNode) return;\n    const recurse = (node) => {\n      if(cb(node)) return;\n      if (node.children) {\n        for(let i = 0; i < node.children.length; i++) {\n          recurse(node.children[i]);\n        }\n      }\n    }\n    recurse(pNode);\n  }\n\n  getLeafNodes(nodes = this.root.children) {\n    const result = [];\n    nodes.forEach((node) => {\n      if (node.children && node.children.length) {\n        result.push(...this.getLeafNodes(node.children));\n      } else {\n        result.push(node);\n      }\n    });\n    return result;\n  }\n\n  getLastNode(node = this.root, cb) {\n    let tn = node;\n    while(tn && tn.children.length) {\n      const l = tn.children.length;\n      tn = tn.children[l-1];\n      cb && cb(tn);\n    }\n    return tn;\n  }\n\n  getDeepestNodeByIndex(index = this.deepestNodePath.length - 1) {\n    return this.deepestNodePath[index];\n  }\n\n  sortSameLevelPos(rep) {\n    if (this.sortingColumn && (this.sortingColumn.level !== rep.level)) {\n      return false;\n    }\n\n    const parent = this.sortingColumn.parent;\n    const repParent = rep.parent;\n    if (parent !== repParent) {\n      return false;\n    }\n\n    const sortingIndex = parent.children.indexOf(this.sortingColumn);\n    const rIndex = parent.children.indexOf(rep);\n    parent.children.splice(sortingIndex, 1);\n    parent.children.splice(rIndex, 0, this.sortingColumn);\n\n    this.leafNodes = this.getLeafNodes();\n\n    return true;\n  }\n\n  // 递归对比每个子节点数据是否一致\n  // isSavedTreeVaild(data, sorting) {\n  //   if (!data.length || !sorting.length) return false;\n  //   if (data.length !== sorting.length) return false;\n  //   const mockData = { children: data, prop: 'root' };\n  //   const mockSorting = { children: sorting, prop: 'root' };\n\n  //   let validTree = true;\n  //   this.traverseDF((node) => {\n  //     const prop = node.prop;\n  //     const sortedNode = this.getNodeByProp(prop, mockSorting);\n  //     // 保存树找不到对象返回 true 结速递归，并标记此保存数据无效。\n  //     if (!sortedNode) {\n  //       validTree = false;\n  //       return true;\n  //     }\n  //     const diff = differenceby(node.children, sortedNode.children, \"prop\");\n\n  //     // 保存树对比数据不一致返回 true 结速递归，并标记此保存数据无效。\n  //     if (diff.length) {\n  //       validTree = false;\n  //       return true;\n  //     }\n  //   }, mockData);\n\n  //   return validTree;\n  // }\n\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TableColumnHeader from './TableColumnHeader';\nimport TableRowHeader from './TableRowHeader';\nimport TableBody from './TableBody';\nimport { convertToColumnHeader, convertToRowHeader, getScrollBarWidth } from './util';\nimport Tree from './tree';\nimport Node from './node';\nimport Th from './Th';\n\nimport './style.css';\nimport { isNumber } from 'util';\n\nexport default class Table extends React.Component {\n\n  static defaultProps = {\n    border: 1,\n    width: 100,\n    setting: {},\n    resizeWidth: true,\n    resizeHeight: true,\n    showColumnHeader: true,\n    showRowHeader: true,\n    sortSameLevelColumn: false,\n    useMapData: false,\n    data: [],\n    columnHeader: [],\n    rowHeader: [],\n    className: '',\n  }\n\n  state = {\n    columns: [],\n    rowGroup: [],\n    rowTableColGroup: [],\n    data: [],\n    layout: {},\n    rowHeaderWidth: 0,\n    colHeaderHeight: 0,\n    bodyWrapperHeight: 0,\n    columnHeader: [],\n    rowHeader: [],\n    gutterWidth: getScrollBarWidth(), // scrollBar width\n    scrollX: null, // has x scroll bar\n    scrollY: null, // has y scroll bar\n    forceHideYGutter: false,\n    lazyLoading: false,\n  }\n\n  static childContextTypes = {\n    table: PropTypes.any,\n  };\n\n  getChildContext() {\n    return {\n      table: this,\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    const { columnHeader, rowHeader, setting } = props;\n    const { r, c, co } = setting || {};\n    this.colHeaderTree = new Tree(columnHeader, c, co);\n    this.rowHeaderTree = new Tree(rowHeader, r);\n    this.cornerNode = new Node({name: ''});\n  }\n\n  bindRef(key) {\n    return (node) => { this[key] = node; }\n  }\n\n  handleScroll = () => {\n    const { bodyWrapper, colHeaderWrapper, rowHeaderWrapper, showRowHeader, tableBody } = this;\n    if (this.showColumnHeader) {\n      colHeaderWrapper.scrollLeft = bodyWrapper.scrollLeft;\n    }\n    if (showRowHeader) {\n      rowHeaderWrapper.scrollTop = bodyWrapper.scrollTop;\n    }\n    if (this.state.lazyLoading) {\n      tableBody.lazyRenderRows(this.lazyStartIndex);\n    }\n  }\n\n  get lazyStartIndex() {\n    return Math.floor(this.bodyWrapper.scrollTop / 30);\n  }\n\n  scheduleLayout() {\n    this.calculateWidth();\n    this.forceUpdate(() => {\n      this.calculateHeight();\n      this.updateScrollY();\n      if (this.state.lazyLoading) {\n        this.tableBody.lazyRenderRows(this.lazyStartIndex);\n      }\n    });\n  }\n\n  componentWillUpdate() {\n    console.log('will update table');\n  }\n\n  calculateWidth() {\n    const { columns, rowTableColGroup, gutterWidth } = this.state;\n\n    const bodyMinWidth = columns.reduce((acc, col) => acc + (col.width || col.minWidth), 0);\n    const tableElWidth = this.tableEl.clientWidth;\n\n    if (this.showRowHeader) {\n      const rowHeaderWidth = rowTableColGroup.reduce((acc, col) => acc + (col.width || col.minWidth), 0);\n      this.state.rowHeaderWidth = rowHeaderWidth;\n    } else {\n      this.state.rowHeaderWidth = 0;\n    }\n\n    const flexColumns = columns.filter(col => typeof col.width !== 'number');\n    let bodyWidth = tableElWidth - this.state.rowHeaderWidth;\n\n    let scrollX;\n\n    if (flexColumns.length) {\n      if (bodyMinWidth < bodyWidth - gutterWidth) {\n        scrollX = false;\n        const totalFlexWidth = bodyWidth - gutterWidth - bodyMinWidth;\n        if (totalFlexWidth > 0) {\n          if (flexColumns.length === 1) {\n            flexColumns[0].realWidth = flexColumns[0].minWidth + totalFlexWidth;\n          } else {\n            const allColumnsWidth = flexColumns.reduce((pre, col) => pre + col.minWidth, 0);\n            const flexWidthPerPixel = totalFlexWidth / allColumnsWidth;\n\n            let widthWithoutFirst = 0;\n\n            flexColumns.forEach((column, index) => {\n              if (index === 0) return;\n              const flexWidth = Math.floor(column.minWidth * flexWidthPerPixel);\n              widthWithoutFirst += flexWidth;\n              column.realWidth = column.minWidth + flexWidth;\n            });\n\n            flexColumns[0].realWidth = flexColumns[0].minWidth + totalFlexWidth - widthWithoutFirst;\n\n          }\n        }\n      } else {\n        scrollX = true;\n        flexColumns.forEach((column) => {\n          column.realWidth = column.minWidth;\n        });\n      } \n    } else {\n      scrollX = bodyMinWidth > bodyWidth;\n      columns.forEach(col => col.realWidth = col.width || col.minWidth )\n      bodyWidth = bodyMinWidth;\n    }\n    this.state.colHeaderWidth = Math.max(bodyMinWidth, bodyWidth);\n    this.state.scrollX = scrollX;\n    \n    this.state.forceHideYGutter = this.state.colHeaderWidth < tableElWidth - this.state.rowHeaderWidth;\n  }\n\n  calculateHeight() {\n    this.setState(state => {\n      const { colHeaderWrapper } = this;\n      let colHeaderHeight;\n      if (this.props.showColumnHeader) {\n        colHeaderHeight = colHeaderWrapper.clientHeight;\n      } else {\n        colHeaderHeight = 0;\n      }     \n      const { height, maxHeight } = this.props;\n      let bodyWrapperHeight = '100%';\n\n      if (height && isNumber(height)) {\n        bodyWrapperHeight = this.props.height - colHeaderHeight;\n      }\n\n      if (maxHeight && isNumber(maxHeight)) {\n        bodyWrapperHeight = this.props.maxHeight - colHeaderHeight;\n      }\n\n      this.cornerNode.height = colHeaderHeight;\n       \n      return {\n        colHeaderHeight,\n        bodyWrapperHeight\n      }\n      \n    });\n  }\n\n  updateScrollY() {\n    this.setState((state) => {\n      const { bodyWrapper } = this;\n     \n      const body = bodyWrapper.querySelector('.dc-table-real-body');\n      const scrollY = body.clientHeight > state.bodyWrapperHeight;\n\n      return {\n        scrollY\n      };\n    });\n  }\n\n  get tableWidth() {\n    const { width } = this.props;\n    if (width > 200) {\n      return width\n    }\n    return '100%';\n  }\n\n  get tableHeight() {\n    const { height, maxHeight } = this.props;\n    const style = {};\n\n    if (height) {\n      style.height = height || '';\n    } else if (maxHeight) {\n      style.maxHeight = maxHeight;\n    }\n\n    return style;\n  }\n\n  get bodyHeightOrMaxHeight() {\n    const { height, maxHeight } = this.props;\n    const { bodyWrapperHeight } = this.state;\n    const style = {};\n    if (height) {\n      style.height = bodyWrapperHeight || '';\n    } else if (maxHeight) {\n      style.maxHeight = bodyWrapperHeight;\n    }\n    return style;\n  }\n\n  get showCorner() {\n    const { showColumnHeader, showRowHeader } = this.props;\n    const { columns, rowGroup } = this.state;\n    return (\n      showColumnHeader &&\n      showRowHeader &&\n      Boolean(columns.length) &&\n      Boolean(rowGroup.length)\n    );\n  }\n\n  get showRowHeader() {\n    const { showRowHeader } = this.props;\n    const { rowGroup } = this.state;\n    return (\n      showRowHeader &&\n      Boolean(rowGroup.length)\n    );\n  }\n\n  get showColumnHeader() {\n    return this.props.showColumnHeader;\n  }\n \n  getConfig() {\n    const { rowHeaderTree, colHeaderTree, props, tableWidth } = this;\n    const { height } = props;\n    const colConfig = {},\n          rowConfig = {};\n\n    colHeaderTree.deepestNodePath.forEach(({prop, height}) => {\n      let cell = colConfig[prop];\n      if (!cell) {\n        cell = {};\n      }\n      cell.height = height;\n      colConfig[prop] = cell;\n    });\n\n    colHeaderTree.leafNodes.forEach(({prop, width}) => {\n      let cell = colConfig[prop];\n      if (!cell) {\n        cell = {};\n      }\n      cell.width = width;\n      colConfig[prop] = cell;\n    });\n\n    rowHeaderTree.deepestNodePath.forEach(({prop, width}) => {\n      let cell = rowConfig[prop];\n      if (!cell) {\n        cell = {};\n      }\n      cell.width = width;\n      rowConfig[prop] = cell;\n    });\n\n    rowHeaderTree.leafNodes.forEach(({prop, height}) => {\n      let cell = rowConfig[prop];\n      if (!cell) {\n        cell = {};\n      }\n      cell.height = height;\n      rowConfig[prop] = cell;\n    });\n\n    return {\n      w: tableWidth,\n      h: height,\n      c: colConfig,\n      // column order\n      co: colHeaderTree.getDFSNodes(),\n      ro: rowHeaderTree.getDFSNodes(),\n      r: rowConfig,\n    };\n  }\n\n  safeCallLayoutChange() {\n    this.props.onLayoutChange && this.props.onLayoutChange(this.getConfig());\n  }\n\n  onLayoutChange() {\n    this.scheduleLayout();\n    this.safeCallLayoutChange();\n  }\n\n  refreshColumn() {\n    const columns = this.colHeaderTree.leafNodes;\n    const rowGroup = this.rowHeaderTree.leafNodes;\n    const columnHeader = convertToColumnHeader(this.colHeaderTree.root.children);\n    const rowHeader = convertToRowHeader(this.rowHeaderTree.root.children);\n    this.setState({ columns, rowGroup, columnHeader, rowHeader }, () => {\n      this.safeCallLayoutChange();\n      if (this.state.lazyLoading) {\n        this.tableBody.lazyRenderRows(this.lazyStartIndex);\n      }\n    });\n  }\n\n  refreshTable(data) {\n    const columns = this.colHeaderTree.leafNodes;\n    const rowGroup = this.rowHeaderTree.leafNodes;\n    const rowTableColGroup = this.rowHeaderTree.deepestNodePath;\n    const columnHeader = convertToColumnHeader(this.colHeaderTree.root.children);\n    const rowHeader = convertToRowHeader(this.rowHeaderTree.root.children);\n\n    // if cell > 300  force use lazy loading.\n    let lazyLoading = false;\n    if (rowGroup.length * columns.length > 3000) {\n      lazyLoading = true;\n    }\n    this.setState({\n      columns,\n      rowGroup,\n      rowTableColGroup,\n      columnHeader,\n      rowHeader,\n      data,\n      lazyLoading,\n    }, this.scheduleLayout);\n  }\n\n  componentDidMount() {\n    const { data } = this.props;\n    this.refreshTable(data);\n  }\n\n  componentWillReceiveProps({columnHeader, rowHeader, data, setting}) {\n    if (this.props.columnHeader === columnHeader && this.props.rowHeader === rowHeader && this.props.data === data) {\n      return;\n    } else {\n      const { r, c, co, ro } = setting || {};\n      this.colHeaderTree = new Tree(columnHeader, c, co);\n      this.rowHeaderTree = new Tree(rowHeader, r, ro);\n      this.refreshTable(data);\n    }\n  }\n\n  get isNoData() {\n    const { data } = this.state;\n    if (Array.isArray(data) && data.length) {\n      return false;\n    }\n    if (Object.keys(data).length) {\n      return false;\n    }\n    return true;\n  }\n\n  render() {\n    const {\n      rowHeaderWidth,\n      colHeaderWidth,\n      colHeaderHeight,\n    } = this.state;\n    const { className } = this.props;\n    \n    return (\n      <div\n        ref={this.bindRef('tableEl')}\n        className={`dc-table ${className}`}\n        style={\n          Object.assign({\n              width: this.tableWidth,\n              overflow: 'hidden'\n            },\n            this.tableHeight\n          )\n        }\n      >\n        <div\n          style={{\n            marginLeft: rowHeaderWidth\n          }}\n          ref={this.bindRef('colBodyWrapper')}\n        >\n          {\n            this.showColumnHeader && (\n              <div ref={this.bindRef('colHeaderWrapper')} className=\"col-header-wrapper\">\n                <TableColumnHeader\n                  {...this.props}\n                  store={this.state}\n                  colHeaderWidth={colHeaderWidth}\n                />\n              </div>\n            )\n          }\n          <div ref={this.bindRef('bodyWrapper')} style={this.bodyHeightOrMaxHeight} className=\"body-wrapper\" onScroll={this.handleScroll}>\n            <TableBody\n              ref={this.bindRef('tableBody')}\n              {...this.props}\n              lazyLoading={this.state.lazyLoading}\n              store={this.state}\n              colHeaderWidth={colHeaderWidth}\n              rowsInView={Math.ceil(this.props.maxHeight / 30)}\n              isNoData={this.isNoData}\n            />\n            {\n              this.isNoData && (\n                <div\n                  style={this.bodyHeightOrMaxHeight}\n                  className=\"nodata-block\"\n                >\n                  <div className=\"nodata-text\">No Data</div>\n                </div>\n              )\n            }\n          </div>\n        </div>\n        {\n          this.showRowHeader && (\n            <div\n              className=\"row-header-wrapper\"\n              ref={this.bindRef('rowHeaderWrapper')}\n              style={{\n                marginTop: colHeaderHeight,\n                ...this.bodyHeightOrMaxHeight\n              }}\n            >\n              <TableRowHeader\n                {...this.props}\n                store={this.state}\n                tree={this.rowHeaderTree}\n              />\n            </div>\n          )\n        }\n        \n        {\n          this.showCorner && (\n            <div\n              className=\"corner-block\"\n              style={{\n                width: rowHeaderWidth,\n                height: colHeaderHeight\n              }}\n            >\n              <table border=\"0\" cellSpacing=\"0\" width=\"100%\">\n                <thead>\n                  <tr>\n                    <Th type=\"corner\" column={this.cornerNode}/>\n                  </tr>\n                </thead>\n              </table>\n            </div>\n          )\n        }\n        \n        <div\n          className=\"dc-table-col-resize-proxy\"\n          ref={this.bindRef('colResizeProxy')}\n          style={{ visibility: 'hidden' }}\n        />\n        <div\n          className=\"dc-table-row-resize-proxy\"\n          ref={this.bindRef('rowResizeProxy')}\n          style={{ visibility: 'hidden' }}\n        />\n      </div>\n    );\n  }\n}","import Table from './Table';\n\nexport default Table;\n","export default {\n  rowHeader:[{\n    name: \"服装\",\n    prop: 'a',\n    children: [{\n      name: \"上衣\",\n      prop: '0',\n      children: [],\n    }, {\n      name: \"帽子\",\n      prop: '1',\n      children: [],\n    }, {\n      name: \"裤子\",\n      prop: '2',\n      children: [],\n    }, {\n      prop: '3',\n      name: \"鞋子\",\n      children: [],\n    }],\n  }, {\n    name: \"电器\",\n    prop: 'b',\n    children: [{\n      prop: '4',\n      name: \"冰箱\",\n      children: [],\n    }, {\n      prop: '5',\n      name: \"电视\",\n      children: [],\n    }, {\n      prop: '6',\n      name: \"空调\",\n      children: [],\n    }, {\n      name: \"风扇\",\n      prop: '7',\n      children: [],\n    }],\n  }],\n  columnHeader:[{\n    name: \"2,018\",\n    prop: \"2018\",\n    children: [{\n      name: \"Q1\",\n      prop: \"2018-Q1\",\n      children: [],\n    }, {\n      name: \"Q2\",\n      prop: \"2018-Q2\",\n      children: [],\n    }, {\n      name: \"Q3\",\n      prop: \"2018-Q3\",\n      children: [],\n    }, {\n      name: \"Q4\",\n      prop: \"2018-Q4\",\n      children: [],\n    }],\n  }, {\n    name: \"2,019\",\n    prop: \"2019\",\n    children: [{\n      name: \"Q1\",\n      prop: \"2019-Q1\",\n      children: [],\n    }, {\n      name: \"Q2\",\n      prop: \"2019-Q2\",\n      children: [],\n    }, {\n      name: \"Q3\",\n      prop: \"2019-Q3\",\n      children: [],\n    }, {\n      name: \"Q4\",\n      prop: \"2019-Q4\",\n      children: [],\n    }],\n  }],\n  data: {\n    0: {\n      \"2018-Q1\": 1,\n      \"2018-Q2\": 2,\n      \"2018-Q3\": 3,\n      \"2018-Q4\": 4,\n      \"2019-Q1\": 5,\n      \"2019-Q2\": 6,\n      \"2019-Q3\": 7,\n      \"2019-Q4\": 8,\n    },\n    1: {\n      \"2018-Q1\": 2,\n      \"2018-Q2\": 3244,\n      \"2018-Q3\": 4903,\n      \"2018-Q4\": 8903,\n      \"2019-Q1\": 5423,\n      \"2019-Q2\": 4567,\n      \"2019-Q3\": 8976,\n      \"2019-Q4\": 1945,\n    },\n    2: {\n      \"2018-Q1\": 3,\n      \"2018-Q2\": 3244,\n      \"2018-Q3\": 4903,\n      \"2018-Q4\": 8903,\n      \"2019-Q1\": 5423,\n      \"2019-Q2\": 4567,\n      \"2019-Q3\": 8976,\n      \"2019-Q4\": 1945,\n    },\n    3: {\n      \"2018-Q1\": 4,\n      \"2018-Q2\": 3244,\n      \"2018-Q3\": 4903,\n      \"2018-Q4\": 8903,\n      \"2019-Q1\": 5423,\n      \"2019-Q2\": 4567,\n      \"2019-Q3\": 8976,\n      \"2019-Q4\": 1945,\n    },\n    4: {\n      \"2018-Q1\": 5,\n      \"2018-Q2\": 3244,\n      \"2018-Q3\": 4903,\n      \"2018-Q4\": 8903,\n      \"2019-Q1\": 5423,\n      \"2019-Q2\": 4567,\n      \"2019-Q3\": 8976,\n      \"2019-Q4\": 1945,\n    },\n    5: {\n      \"2018-Q1\": 6,\n      \"2018-Q2\": 3244,\n      \"2018-Q3\": 4903,\n      \"2018-Q4\": 8903,\n      \"2019-Q1\": 5423,\n      \"2019-Q2\": 4567,\n      \"2019-Q3\": 8976,\n      \"2019-Q4\": 1945,\n    },\n    6: {\n      \"2018-Q1\": 7,\n      \"2018-Q2\": 3244,\n      \"2018-Q3\": 4903,\n      \"2018-Q4\": 8903,\n      \"2019-Q1\": 5423,\n      \"2019-Q2\": 4567,\n      \"2019-Q3\": 8976,\n      \"2019-Q4\": 1945,\n    },\n    7: {\n      \"2018-Q1\": 8,\n      \"2018-Q2\": 3244,\n      \"2018-Q3\": 4903,\n      \"2018-Q4\": 8903,\n      \"2019-Q1\": 5423,\n      \"2019-Q2\": 4567,\n      \"2019-Q3\": 8976,\n      \"2019-Q4\": 1945,\n    }\n  }\n};","import React, {useContext} from 'react';\nimport {CSTableContext} from './index';\n\nexport default function() {\n\n  const {\n    renderCell,\n    cellWidth = 120,\n    cellHeight = 40,\n    dataAreaState,\n  } = useContext(CSTableContext);\n\n  const {\n    processedHeader: header,\n    processedData: data,\n    rowStartIndex,\n  } = dataAreaState;\n\n  return ( \n    data.map((_, rowIndex) => (\n      header.map((h, colIndex) => (\n        <div\n          className=\"cell\"\n          key={`d-a-${rowIndex}-${colIndex}`}\n          style={{\n            position: 'absolute',\n            top: (rowIndex + rowStartIndex) * cellHeight,\n            left: h.left,\n            width: h.width || cellWidth,\n            height: cellHeight\n          }}\n        >\n          { \n            h.renderCell\n              ? h.renderCell(data[rowIndex][h.prop], (rowIndex + rowStartIndex), h.prop, h)\n              : renderCell(data[rowIndex][h.prop], (rowIndex + rowStartIndex), h.prop, h)\n          }\n        </div>\n      ))\n    ))\n  );\n}","let scrollBarWidth;\nexport function getScrollBarWidth() {\n  if (scrollBarWidth !== undefined) return scrollBarWidth;\n  const dom = document.createElement('div');\n  const body = document.body || dom;\n\n  dom.style.visibility = 'hidden';\n  dom.style.width = '100px';\n  dom.style.position = 'absolute';\n  dom.style.top = '-9999px';\n  dom.style.overflow = 'scroll';\n\n  body.appendChild(dom);\n\n  const totalWidth = dom.offsetWidth;\n  const widthWithoutScroll = dom.clientWidth;\n\n  body.removeChild(dom);\n\n  return totalWidth - widthWithoutScroll;\n}\n\nexport function processHeaderWidth (header, defaultCellWidth, returnTotalWidth = false)  {\n  const totalWidth = header.reduce((acc, curr) => {\n    curr.left = acc;\n    const accWidth = (curr.width || defaultCellWidth) + acc\n    return accWidth;\n  }, 0);\n  if (returnTotalWidth) {\n    return totalWidth;\n  }\n  return header;\n}\n\nexport function getMutableIndexAndCount(header, scrollWidth, dataAreaWidth, defaultCellWidth) {\n  let accWidth = 0,\n      startIndex = 0,\n      endIndex = header.length - 1;\n  const totalWidth = scrollWidth + dataAreaWidth\n  for(let i = 0; i < header.length; i++) {\n    accWidth += (header[i].width) || defaultCellWidth;\n    if (accWidth < scrollWidth) {\n      startIndex = i;\n    }\n    if (accWidth > totalWidth) {\n      endIndex = i;\n      break;\n    }\n  }\n  return {\n    startIndex,\n    count: (endIndex - startIndex) + 1\n  };\n}\n","import React, { useContext, useCallback, useRef } from 'react';\nimport {CSTableContext} from './index';\nimport { processHeaderWidth } from './util';\n\nconst returnFalse = () => false;\n\nexport default function() {\n\n  const {\n    cellWidth,\n    cellHeight,\n    renderHeader,\n    dataAreaState,\n    setDataAreaState,\n    tableRef,\n    colResizeProxyRef,\n    header: allHeader,\n  } = useContext(CSTableContext);\n\n  const isDraggingRef = useRef(false);\n  const draggingCol = useRef();\n  const startPosRef = useRef();\n\n  const {\n    processedHeader: header,\n    colStartIndex,\n  } = dataAreaState;\n\n  const handleMouseMove = useCallback((e) => {\n    if (isDraggingRef.current) return;\n    const currHeader = e.currentTarget;\n    const rect = currHeader.getBoundingClientRect();\n    const bodyStyle = document.body.style;\n\n    if (rect.right - e.pageX < 5) {\n      bodyStyle.cursor = 'col-resize';\n      draggingCol.current = currHeader.dataset.prop;\n    } else {\n      bodyStyle.cursor = '';\n    }\n  }, []);\n\n  const handleMouseOut = useCallback((e) => {\n    document.body.style.cursor = '';\n  }, []);\n\n  const handleResizeStart = useCallback((e) => {\n    const movedDistance = e.clientX - tableRef.current.getBoundingClientRect().left\n    colResizeProxyRef.current.style.left = movedDistance + 'px';\n    document.body.style.cursor = 'col-resize';\n  }, [colResizeProxyRef, tableRef]);\n\n  const handleResizeStop = useCallback((e) => {\n    colResizeProxyRef.current.style.visibility = 'hidden';\n    document.body.style.cursor = '';\n    document.removeEventListener('mousemove', handleResizeStart);\n    document.removeEventListener('mouseup', handleResizeStop);\n    isDraggingRef.current = false;\n    document.onselectstart = null;\n    document.ondragstart = null;\n    const offset = e.clientX - startPosRef.current;\n    const currH = header.find(h => h.prop === draggingCol.current);\n    if (currH) {\n      // min 30\n      currH.width = Math.max((currH.width || cellWidth) + offset, 30);\n      const dataAreaWidth = processHeaderWidth(allHeader, cellWidth, true);\n      // force update\n      setDataAreaState((prev) => ({...prev, dataAreaWidth}));\n    }\n  }, [cellWidth, colResizeProxyRef, handleResizeStart, header, setDataAreaState, allHeader]);\n\n  const handleMouseDown = useCallback((e) => {\n    if (draggingCol.current) {\n      isDraggingRef.current = true;\n      const currTarget = e.currentTarget;\n      const tableLeft = tableRef.current.getBoundingClientRect().left;\n      const startPos = currTarget.getBoundingClientRect().right - tableLeft;\n      colResizeProxyRef.current.style.visibility = 'visible';\n      colResizeProxyRef.current.style.left = startPos + 'px';\n      startPosRef.current = currTarget.getBoundingClientRect().right;\n\n      document.onselectstart = returnFalse;\n      document.ondragstart = returnFalse;\n\n      document.addEventListener('mousemove', handleResizeStart);\n      document.addEventListener('mouseup', handleResizeStop);\n\n    }\n  }, [colResizeProxyRef, handleResizeStart, handleResizeStop, tableRef]);\n  \n  return (\n    header.map((h, i) => (\n      <div\n        key={`h-${i}`}\n        className=\"header\"\n        style={{\n          position: 'absolute',\n          width: h.width || cellWidth,\n          height: cellHeight,\n          left: h.left,\n        }}\n        data-prop={h.prop}\n        onMouseMove={handleMouseMove}\n        onMouseOut={handleMouseOut}\n        onMouseDown={handleMouseDown}\n        onMouseMove={handleMouseMove}\n      >\n        { \n          h.renderHeader\n            ? h.renderHeader(h, h.prop)\n            : renderHeader(h, h.prop)\n        }\n      </div>\n    ))\n  );\n}\n","import React, {useContext} from 'react';\nimport { CSTableContext } from './index';\n\nexport default function()  {\n\n  const {\n    cellWidth,\n    cellHeight,\n    dataAreaState,\n    renderCell,\n  } = useContext(CSTableContext);\n\n  const {\n    processedData: data,\n    rowStartIndex,\n    fixedLeftCol,\n  } = dataAreaState;\n  return (\n    data.map((_, rowIndex) => (\n      fixedLeftCol.map((h, colIndex) => (\n        <div\n          className=\"cell fixed-left\"\n          key={`f-c-${rowIndex}-${colIndex}`}\n          style={{\n            position: 'absolute',\n            top: (rowIndex + rowStartIndex) * cellHeight,\n            left: h.left,\n            width: h.width || cellWidth,\n            height: cellHeight\n          }}\n        >\n          { \n            h.renderCell\n              ? h.renderCell(data[rowIndex][h.prop], (rowIndex + rowStartIndex), h.prop, h)\n              : renderCell(data[rowIndex][h.prop], (rowIndex + rowStartIndex), h.prop, h)\n          }\n        </div>\n      ))\n    ))\n  );\n}\n","import React, {useContext} from 'react';\nimport { CSTableContext } from './index';\n\nexport default function()  {\n\n  const {\n    cellWidth,\n    cellHeight,\n    dataAreaState,\n    renderHeader\n  } = useContext(CSTableContext);\n\n\n  const {\n    fixedLeftCol,\n  } = dataAreaState;\n\n  return (\n    fixedLeftCol.map((h, colIndex) => (\n      <div\n        key={`f-h-${colIndex}`}\n        className=\"header\"\n        style={{\n          position: 'absolute',\n          left: h.left,\n          width: h.width || cellWidth,\n          height: cellHeight\n        }}\n      >\n        { \n          h.renderHeader\n            ? h.renderHeader(h, h.prop)\n            : renderHeader(h, h.prop)\n        }\n      </div>\n    ))\n  );\n}\n","import React, { useState, useContext, useMemo } from 'react';\nimport DataArea from './DataArea';\nimport Header from './Header';\nimport './style.css';\nimport { CSTableContext } from './index';\nimport FixedLeftColumn from './FixedLeftColumn';\nimport FixedLeftHeader from './FixedLeftHeader';\n\nexport default function CSTable() {\n\n  const {\n    header,\n    data,\n    scrollBarWidth,\n    // width,\n    height = 440,\n    cellWidth = 120,\n    cellHeight = 40,\n    handleScroll,\n    dataAreaRef,\n    headerRef,\n    fixedColLeftRef,\n    colResizeProxyRef,\n    tableRef,\n    fixedLeftColWidth,\n    preventScroll,\n    enableResize = true,\n    dataAreaState: { dataAreaWidth: areaWidthAfterResize}\n  } = useContext(CSTableContext);\n\n  const rowCount = data.length,\n        colCount = header.length;\n\n  const areaWidth = useMemo(() => {\n    if (enableResize) {\n      return header.reduce((acc, curr) => acc + (curr.width || cellWidth), 0);\n    }\n    return colCount * cellWidth;\n  }, [enableResize, header, colCount, cellWidth]);\n\n  const areaHeight = useMemo(() => {\n    return rowCount * cellHeight\n  }, [rowCount, cellHeight]);\n\n  return (\n    <div ref={tableRef} className=\"cs-table\" style={{position: 'relative', height: height}}>\n      \n      {\n        preventScroll && <div style={{position: 'absolute', top: 0, left: 0, right: 0, bottom: 0, zIndex: 2}}/>\n      }\n\n      <div ref={headerRef} style={{overflow: 'hidden', marginLeft: fixedLeftColWidth}}>\n        <div style={{width: (areaWidthAfterResize || areaWidth) + scrollBarWidth, position: 'relative', height: cellHeight}}>\n          <Header />\n        </div>\n      </div>\n\n      {\n        !!fixedLeftColWidth && (\n          <>\n            <div style={{position:'absolute', width: fixedLeftColWidth, top: 0}}>\n              <FixedLeftHeader />\n            </div>\n\n            <div\n              ref={fixedColLeftRef}\n              style={{\n                overflow: 'hidden',\n                height: height - cellHeight,\n                width: fixedLeftColWidth,\n                position: 'absolute',\n                left: 0\n              }}\n            >\n              <div style={{height: areaHeight + scrollBarWidth}}>\n                <FixedLeftColumn />\n              </div>\n            </div>\n          </>\n        )\n      }\n    \n      <div\n        ref={dataAreaRef}\n        style={{\n          position: 'relative',\n          overflow: 'auto',\n          marginLeft: fixedLeftColWidth,\n          height: height - cellHeight,\n        }}\n        onScroll={handleScroll}\n      >\n        <div\n          style={{\n            height: areaHeight,\n            width: areaWidthAfterResize || areaWidth,\n          }}\n        >\n          <DataArea /> \n        </div>\n      </div>\n\n      <div\n        className=\"resize-col-proxy\"\n        ref={colResizeProxyRef}\n        style={{ visibility: 'hidden' }}\n      />\n    </div>\n  );\n}\n","import React, { useState, memo } from 'react';\nimport CSTable from '../index';\n\nconst header = [\n  {\n    label: 'Operation',\n    fixed: true,\n    prop: 'op',\n    width: 90,\n    renderHeader: (h, p) => <a href=\"#\">Operation</a>,\n    renderCell: () => <a href=\"#\">OP</a>\n  },\n  {\n    label: 'Email (Fixed)',\n    fixed: true,\n    prop: 'email',\n  }\n];\nfor (let i = 0; i < 200; i++) {\n  header.push({\n    label: `H ${i}`,\n    prop: `${i}`,\n  });\n}\n\nconst data = [];\nfor(let r = 0; r < 10000; r++) {\n  const row = {};\n  for(let c = 0; c < 200; c++) {\n    row[c] = `data ${r}:${c}`;\n  }\n  row['email'] = `test_${r}@email.com`;\n  data.push(row);\n}\n\nexport default memo(function() {\n\n  const [count, setCount] = useState(0);\n\n  const [h, setH] = useState(header);\n  const [d, setD] = useState(data);\n  const [preventScroll, setPreventScroll] = useState(false);\n\n  return (\n    <div>\n      {/* <button onClick={() => setD([{email: 'update_email@test.com'}])}>Update Data</button>\n      <button onClick={() => setH([{label: 'Email', prop: 'email'}])}>Update Header</button>\n      <button onClick={() => {setD(data); setH(header);}}> Rstore</button>\n      <button onClick={() => setCount(count + 1)}>Update Count</button>\n      <button onClick={() => setPreventScroll(!preventScroll)}>Toggle fix scroll</button>\n      <p>{count}</p> */}\n\n      <p style={{margin: 23}}> 200 * 10000 (col * row)</p>\n\n      <CSTable\n        header={h}\n        data={d}\n        cellWidth={200}\n        preventScroll={preventScroll}\n        // renderCell={(record, prop) => record[prop]}\n        // renderHeader={(header, prop) => header[prop]}\n      />\n    </div>\n  );\n});","import { useEffect, useRef } from 'react';\n\nexport default (fnc, deps) => {\n  const isMountRef = useRef(false);\n\n  useEffect(() => {\n    if (!isMountRef.current) {\n      isMountRef.current = true;\n    } else {\n      return fnc();\n    }\n\n  }, deps);\n}\n","import React, { useRef, useState, useCallback, useMemo } from 'react';\nimport CSTable from './CSTable';\nimport { getScrollBarWidth, processHeaderWidth, getMutableIndexAndCount } from './util';\nimport useUpdateEffect from './useUpdateEffect';\n\nconst CSTableContext = React.createContext({});\n\nconst getRangeFromArr = (arr, start, count) => {\n  const res = [];\n  for(let i = 0; i <= count; i++) {\n    const record = arr[start + i]\n    record && res.push(record);\n  }\n  return res;\n}\n\nexport const Provider = (props) => {\n  const {\n    header,\n    data,\n    height = 440,\n    cellWidth = 120,\n    cellHeight = 40,\n    renderCell = (record, rowIndex, prop) => record,\n    renderHeader = (header, prop) => header.label,\n    children,\n    preventScroll = false,\n  } = props;\n\n  const dataAreaRef = useRef();\n  const headerRef = useRef();\n  const fixedColLeftRef = useRef();\n  const scrollBarRef = useRef(getScrollBarWidth());\n  const colResizeProxyRef = useRef();\n  const tableRef = useRef();\n\n  const restHeader = useMemo(\n    () => processHeaderWidth(header.filter(h => !h.fixed), cellWidth),\n    [header, cellWidth]\n  );\n  const fixedLeft = useMemo(\n    () => processHeaderWidth(header.filter(h => h.fixed), cellWidth),\n    [header, cellWidth]\n  );\n\n  // design for some fixed element, when data scroll, it has position offset;\n  // eg: datepicker, multi select in cell.\n  const preventScrollRef = useRef();\n  preventScrollRef.current = preventScroll;\n\n  // caculate fixed col width.\n  const fixedLeftColWidth = useMemo(() => {\n    return fixedLeft.reduce((acc, curr)=> acc + (curr.width || cellWidth), 0);\n  }, [fixedLeft, cellWidth]);\n\n  const initWidthCountRef = useRef(Math.ceil((document.body.offsetWidth - fixedLeftColWidth) / cellWidth));\n  const initHeightCountRef = useRef(Math.ceil(height / cellHeight));\n\n  const [dataAreaState, setDataAreaState] = useState(() => ({\n    processedHeader: getRangeFromArr(restHeader, 0, initWidthCountRef.current),\n    processedData: getRangeFromArr(data, 0, initHeightCountRef.current),\n    fixedLeftCol: fixedLeft,\n    rowStartIndex: 0,\n    colStartIndex: 0,\n  }));\n\n  // props update\n  useUpdateEffect(() => {\n    setDataAreaState((preState) => {\n      const {\n        processedData: preData,\n        processedHeader: preHeader,\n        fixedLeftCol: preFixedLeftCol,\n      } = preState;\n\n      if (preData !== data) {\n        preState.processedData = getRangeFromArr(data, 0, initHeightCountRef.current);\n      }\n\n      if (preHeader !== header) {\n        preState.processedHeader = getRangeFromArr(restHeader, 0, initWidthCountRef.current);\n      } \n\n      if (preFixedLeftCol !== fixedLeft) {\n        preState.fixedLeftCol = fixedLeft\n      }\n\n      return {\n        ...preState,\n      };\n    });\n  }, [data, restHeader, fixedLeft]);\n\n  const colCacheIndexRef = useRef(0);\n  const rowCacheIndexRef = useRef(0);\n\n  const handleScroll = useCallback((e) => {\n    const cellTarget = e.currentTarget;\n    if (!cellTarget) return;\n    const {\n      scrollLeft: sLeft,\n      scrollTop: sTop,\n      offsetWidth: oWidth,\n      offsetHeight: oHeight,\n    } = cellTarget;\n\n    // disable resize\n    // const colStartIndex = Math.floor(sLeft / cellWidth),\n    //       colRenderCount = Math.ceil(oWidth / cellWidth);\n\n    const {\n      startIndex: colStartIndex,\n      count: colRenderCount\n    } = getMutableIndexAndCount(restHeader, sLeft, dataAreaRef.current.offsetWidth, cellWidth);\n\n    const rowStartIndex = Math.floor(sTop / cellHeight),\n          rowRenderCount = Math.ceil(oHeight / cellHeight);\n\n    if (headerRef.current) {\n      headerRef.current.scrollLeft = sLeft;\n    }\n\n    if (fixedColLeftRef.current) {\n      fixedColLeftRef.current.scrollTop = sTop;\n    }\n\n    // if stay on same cell, do not rerender table.\n    if (colCacheIndexRef.current === colStartIndex && rowCacheIndexRef.current === rowStartIndex) return;\n    // assign new pos.\n    colCacheIndexRef.current = colStartIndex;\n    rowCacheIndexRef.current = rowStartIndex;\n\n    const processedHeader = getRangeFromArr(restHeader, colStartIndex, colRenderCount);\n    const processedData = getRangeFromArr(data, rowStartIndex, rowRenderCount);\n    \n    setDataAreaState((prevState) => ({\n      ...prevState,\n      processedHeader,\n      processedData,\n      colStartIndex,\n      rowStartIndex,\n    }));\n\n  }, [restHeader, data, cellWidth, cellHeight, dataAreaRef]);\n\n  const editorContext = {\n    header: restHeader,\n    data,\n    // renderCell,\n    // width,\n    height,\n    scrollBarWidth: scrollBarRef.current,\n    cellWidth,\n    cellHeight,\n    dataAreaRef,\n    headerRef,\n    fixedColLeftRef,\n    colResizeProxyRef,\n    tableRef,\n    handleScroll,\n    dataAreaState,\n    fixedLeftColWidth,\n    setDataAreaState,\n    preventScroll: preventScrollRef.current,\n    renderCell,\n    renderHeader,\n  };\n\n  return (\n    <CSTableContext.Provider value={editorContext}>\n      {children}\n    </CSTableContext.Provider>);\n}\n\nexport {\n  CSTableContext\n};\n\nexport default React.memo(function CSTableProvider(props) {\n  return (\n    <Provider {...props}>\n      <CSTable/>\n    </Provider>\n  );\n});\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Table from './component';\nimport data from './data';\nimport CSTable from './table/demo/demo1';\n\nexport default class App extends React.Component {\n\n  state = {\n    rowHeader: data.rowHeader,\n    columnHeader: data.columnHeader,\n    data: data.data,\n  }\n\n\n  render() {\n    const {\n      columnHeader,\n      rowHeader,\n      data,\n    } = this.state;\n    return (\n      <div className=\"App\">\n        <h1>High performance table</h1>\n\n        <div style={{margin: 15}}>\n          <CSTable />\n        </div>\n\n        {/* <div style={{margin: 15}}>\n          <h2>Data gird, supoort drag & drop， nested header, resize width & height </h2>\n          <Table\n            columnHeader={columnHeader}\n            rowHeader={rowHeader}\n            data={data}\n            sortSameLevelColumn={true}\n          />\n        </div>\n        <div style={{margin: 15}}>\n          <h2>Hide header</h2>\n          <Table\n            columnHeader={columnHeader}\n            rowHeader={rowHeader}\n            data={data}\n            resizeWidth={false}\n            showRowHeader={false}\n          />\n        </div>\n        <div style={{margin: 15}}>\n          <h2>Width && MaxHeight</h2>\n          <Table\n            columnHeader={columnHeader}\n            rowHeader={rowHeader}\n            data={data}\n            width={500}\n            maxHeight={250}\n          />\n        </div> */}\n      </div>\n    );\n  }\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}